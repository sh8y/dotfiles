# set-option -g default-shell /usr/local/bin/zsh

# set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

# set-option -g status-position top
set-option -g status-position bottom

#set -g default-terminal "xterm-color"
set -g default-terminal "screen-256color"
#set-option -g default-command "reattach-to-user-namespace -l zsh"
bind r \
    source-file ~/.tmux.conf\;\
    display-message "...CONFIG RELOADED..."

bind e \
    move-window -r\;\
    display-message "Windows reordered..."

# prefix key
unbind C-b
set -g prefix C-g
bind g send-prefix
bind-key g send-prefix

# enabling this overrides C-g
# set -g prefix `
# bind ` send-prefix

# set -g prefix C-Space
# bind Space send-prefix

# C-gg would switch between lastwindow similar to C-a C-a in screen
bind-key C-g last-window

# Set that stupid Esc-Wait off, so VI works again
set-option -sg  escape-time 0

# split
bind | split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind _ split-window -v -c '#{pane_current_path}'  # Split panes vertically
bind - split-window -v -c '#{pane_current_path}'  # Split panes vertically

# unbind-key C-\

bind-key -n C-\ split-window -h -c '#{pane_current_path}'  # Split panes horizontal

# using this shortcut for alfred now
# bind-key -n C-Space split-window -h -c '#{pane_current_path}'  # Split panes horizontal

# bind-key -n C-Space resize-pane -Z
bind-key -n C-_ split-window -v -c '#{pane_current_path}'  # Split panes vertically

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

bind-key -n C-M-h previous-window
bind-key -n C-M-l next-window

# bind-key -n M-Left previous-window
# bind-key -n M-Right next-window
bind-key -n M-Left resize-pane -L 5
bind-key -n M-Right resize-pane -R 5
bind-key -n M-Up resize-pane -U 5
bind-key -n M-Down resize-pane -D 5

# bind-key -n M-p previous-window
# bind-key -n M-n next-window

bind-key -n M-i previous-window
bind-key -n M-o next-window

bind-key -n S-Right send-keys C-e

# meta t and w for opening and closing tabs "windows"
# bind-key -n M-t new-window
# bind-key -n M-w kill-window
# bind -n M-w kill-pane
# -n means you don't have to press prefix.
bind-key -n M-w kill-pane

# not working
# bind-key -n C-0 kill-pane

# pane selection
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# bind -n M-h select-pane -L
# bind -n M-l select-pane -R
# bind -n M-k select-pane -U
# bind -n M-j select-pane -D
bind-key -n M-h resize-pane -L 5
bind-key -n M-l resize-pane -R 5
bind-key -n M-k resize-pane -U 5
bind-key -n M-j resize-pane -D 5

# mouse settings
# set-option -g mouse-select-pane on
# set-option -g mouse-select-window on
# set-window-option -g mode-mouse on

#disable mouse by default
set -g mouse off
# set -g mouse on
# set -g mode-mouse off
# set -g mouse-resize-pane off
# set -g mouse-select-pane off
# set -g mouse-select-window off

# Toggle mouse on with ^B m
bind m \
  set -g mouse on \;\
  display 'Mouse: ON'
  # set -g mode-mouse on \;\
  # set -g mouse-resize-pane on \;\
  # set -g mouse-select-pane on \;\
  # set -g mouse-select-window on \;\
  # display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mouse off \;\
  display 'Mouse: OFF'
  # set -g mouse-resize-pane off \;\
  # set -g mouse-select-pane off \;\
  # set -g mouse-select-window off \;\
  # set -g mode-mouse off \;\
  # display 'Mouse: OFF'

# bind-key -n F2 send-keys 'echo "pane 2"'

# show message log
# unbind F1
# bind-key -n F1 show-messages

# rename window
unbind F2
bind-key -n F2 command-prompt -p " name window:" "rename-window '%%'"

# show pane/window selector
# unbind F4
# bind-key -n F4 choose-tree -GZ

# reload config
# unbind F5
# bind-key -n F5 \
#     source-file ~/.tmux.conf\;\
#     display-message "...CONFIG RELOADED..."

# toggle typing in all panes mode
unbind F7
bind-key -n F7 set-window-option synchronize-panes\;\
  display-message " synchronize-panes is now #{?pane_synchronized,ON,OFF}"
# bind-key -n F7 setw synchronize-panes \;\
#   display-message "toggled synchronize-panes"


# turn off mouse support with F2
# bind-key -n F2 \
#   set -g mouse-resize-pane off \;\
#   set -g mouse-select-pane off \;\
#   set -g mouse-select-window off \;\
#   set -g mode-mouse off \;\
#   display 'Mouse: OFF'


# enter copy mode
# unbind F8
# bind-key -n F8 copy-mode

# paste data from copy buffer
# unbind F9
# bind-key -n F9 paste-buffer

# list copy buffers
# unbind F10
# bind-key -n F10 list-buffers

# show list of buffers and paste the one you select
# unbind F12
# bind-key -n F12 choose-buffer

# set keys for command prompt mode
set-option -g status-keys vi

##   ### tmux copy paste
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# for tmux 2.4
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe "pbcopy"
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# TODO: figure out how to do this
# bind-key -T copy-mode-vi 'C-h' "send-keys C-h" "select-pane -L"

set -w -g wrap-search off

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
### end tmux copy paste


set-option -g bell-action any
# set-option -g set-titles on
# set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell on

# start window index of 1 instead of 0
set-option -g base-index 1

# Start panes at 1 instead of 0. tmux 1.6 only
setw -g pane-base-index 1

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# kill pane without warning - prefix k
# bind k kill-pane

# bind h previous-window

# set -g history-limit 4096
set -g history-limit 12000

setw -g aggressive-resize on

# don't let the shell rename window title automatically. You can rename with prefix :rename-window 'window name'
set-option -g allow-rename off

unbind M-b

# use this for calling the tt script
bind-key t new-window \; split-window -h # horizontal
# bind-key t new-window \; split-window -v # vertical
# bind t new-window; split-window -h

### # Smart pane switching with awareness of vim splits
### is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
### bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
### bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
### bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
### bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
### # investigate if this is needed
### # bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R





## Join windows: <prefix> s, <prefix> j
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# set-option -g status-utf8 on
# set-option -g status-justify centre
# set-option -g status-justify left

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "âžœ "


# COLORS start

# set-option -g status-justify centre
set-option -g status-justify right
# set-option -g status-bg colour18

# status line background
# set-option -g status-bg colour10
set-option -g status-bg colour18
set-option -g status-fg white
set-option -g status-left-length 40

# current
# set-option -g pane-active-border-fg green

# new
# set-option -g pane-active-border-fg colour8
set-option -g pane-active-border-fg yellow
# set-option -g pane-active-border-fg red


# dark theme
# set-option -g pane-active-border-bg black

# light theme
set-option -g pane-active-border-bg colour8


# set-option -g pane-active-border-bg yellow
# set-option -g pane-active-border-bg colour234
# set-option -g pane-active-border-bg yellow

set-option -g pane-border-fg colour8
set-option -g pane-border-bg black

set-option -g message-fg yellow
set-option -g message-bg black

# blend in status line
# set -g status-style "bg=black"
#setw -g mode-bg black

# non-selected windows background
setw -g window-status-bg colour19

# refresh status every 2 seconds
set -g status-interval 2

# selected tab color
setw -g window-status-current-bg yellow
setw -g window-status-current-fg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# show edit mode vs vim mode on command line
set -g message-command-fg blue
set -g message-command-bg black
# set -g status-left '#[fg=blue]#H#[fg=yellow]:#[fg=white]#S #[fg=yellow]][#[default]'


# set -g status-right "#[fg=red]#S #[default] #(ruby -v | awk '{print $2}')"
set -g status-right '#[fg=red]#S #[default]'

# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

# pre test
# set -g status-right '#[fg=green]][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'

# work setup
# set -g status-left '#[fg=green][#[fg=white] #T #[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M #[fg=green]]#[default]'

# set -g status-left ' #{==:#{host},nikos-iMac} #{=:pane_title} #{cursor_y} #[fg=green]#[bg=default]#[fg=colour14]%Y-%m-%d #[fg=colour5]%l:%M %p #[fg=green]#[default] #[fg=green]#(is_tomcat_on)'
set -g status-left-length 100
# set -g status-left ' #[fg=green]#[bg=default]#[fg=colour14]%Y-%m-%d #[fg=colour5]%l:%M %p #[fg=green]#[default] #{?#{==:#(is_tomcat_on),yes},#[fg=green]Tomcat is ON,#[fg=red]Tomcat is OFF} #[fg=white]#(uptime)'
# set -g status-left ' #[bg=red,fg=black]#{?client_prefix, prefix,#[default] prefix} #[default]  #[fg=black,bg=yellow] #{pane_mode} #[bg=default]#[fg=colour14] %Y-%m-%d #[fg=colour5]%l:%M %p #[fg=green]#[default] #{?#{==:#(is_tomcat_on),yes},#[fg=green]Tomcat is ON,#[fg=red]Tomcat is OFF}'
set -g status-left ' #[bg=red,fg=black]#{?client_prefix, prefix,#[default] prefix} #[default] #[fg=black]#{?pane_in_mode,#[bg=yellow] #{pane_mode},} #[bg=default]#[fg=colour14] %Y-%m-%d #[fg=colour5]%l:%M %p #[fg=green]#[default] #{?#{==:#(is_tomcat_on),yes},#[fg=green]Tomcat is ON ,#[fg=red]Tomcat is OFF }'
# TODO: add pane in mode check like this #{||,#{pane_in_mode},#{alternate_on}}

# this one works
# set -g status-left ' #{==:#{host},nikos-iMac} #{?#{==:#(is_tomcat_on),aloha},yes,no} #{?#{==:#(is_tomcat_on),aloha},#[fg=green]yes,#[fg=red]no} '


# set -g status-left ' #{?window_zoomed_flag,#[bg=yellow]#[fg=black],#[bg=brightred]#[fg=black]} '
# set -g status-right ' #[fg=green]#[bg=default]#[fg=colour14]%Y-%m-%d #[fg=colour5]%l:%M %p #[fg=green]#[default]'

# set -g status-right '#[fg=yellow]][ #[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]'
# set -g status-right ''

# set -g status-justify right
# set -g status-justify left
# set -g status-justify centre


# window status
# setw -g window-status-format " #F#I:#W#F "
# setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-bg colour19
# setw -g window-status-bg colour254
# setw -g window-status-fg colour1
setw -g window-status-fg colour6
# setw -g window-status-fg colour3
# setw -g window-status-format " #I #[fg=colour14]#F #[fg=colour1]#W "
# setw -g window-status-format " #I:#[fg=red]#F#[fg=colour250]#W "
setw -g window-status-format " #I:#[fg=red]#F#[fg=#ffb964]#W "
# setw -g window-status-format " #I: #W "

setw -g window-status-current-bg colour6
setw -g window-status-current-fg colour0
# setw -g window-status-current-format "#[bg=colour1]#[fg=colour0] #I#[fg=colour0]#F #[fg=colour0]#[bg=colour1] #W "

# don't relly need the * sign for current window since I have different colors here
setw -g window-status-current-format " #[bg=colour6]#[fg=colour0]#I:#[fg=colour1]#F#[fg=colour0]#W "
setw -g window-status-current-attr dim
# setw -g window-status-attr reverse

setw -g window-status-last-style fg=colour6

### ######################
### ### DESIGN CHANGES ###
### ######################
###
### # panes
### set -g pane-border-fg black
### set -g pane-active-border-fg brightred
###
### ## Status bar design
### # status line
### set -g status-justify left
### set -g status-bg default
### set -g status-fg colour12
### set -g status-interval 2
###
### # messaging
### set -g message-fg black
### set -g message-bg yellow
### set -g message-command-fg blue
### set -g message-command-bg black
###
### #window mode
### setw -g mode-bg colour6
### setw -g mode-fg colour0
###
### # window status
### setw -g window-status-format " #F#I:#W#F "
### setw -g window-status-current-format " #F#I:#W#F "
### setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
### setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
### setw -g window-status-current-bg colour0
### setw -g window-status-current-fg colour11
### setw -g window-status-current-attr dim
### setw -g window-status-bg green
### setw -g window-status-fg black
### setw -g window-status-attr reverse
###
### # Info on left (I don't have a session display for now)
### set -g status-left ''
###
### # loud or quiet?
### set-option -g visual-activity off
### set-option -g visual-bell off
### set-option -g visual-silence off
### set-window-option -g monitor-activity off
### set-option -g bell-action none
###
### set -g default-terminal "screen-256color"
###
### # The modes {
### setw -g clock-mode-colour colour135
### setw -g mode-attr bold
### setw -g mode-fg colour196
### setw -g mode-bg colour238
###
### # }
### # The panes {
###
### set -g pane-border-bg colour235
### set -g pane-border-fg colour238
### set -g pane-active-border-bg colour236
### set -g pane-active-border-fg colour51
###
### # }
### # The statusbar {
###
### set -g status-position bottom
### set -g status-bg colour234
### set -g status-fg colour137
### set -g status-attr dim
### set -g status-left ''
### set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
### set -g status-right-length 50
### set -g status-left-length 20
###
### setw -g window-status-current-fg colour81
### setw -g window-status-current-bg colour238
### setw -g window-status-current-attr bold
### setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
###
### setw -g window-status-fg colour138
### setw -g window-status-bg colour235
### setw -g window-status-attr none
### setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
###
### setw -g window-status-bell-attr bold
### setw -g window-status-bell-fg colour255
### setw -g window-status-bell-bg colour1
###
### # }
### # The messages {
###
### set -g message-attr bold
### set -g message-fg colour232
### set -g message-bg colour166
###
### # }

